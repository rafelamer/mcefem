// Define mesh boundary
border C(t=0, 2* pi){x=cos(t); y=sin(t);}

// The triangulated domain Th is on the left side of its boundary
mesh Th = buildmesh(C(100));

// The finite element space defined over Th is called here Vh
fespace Vh(Th, P2);
Vh u, v;// Define u and v as piecewise-P1 continuous functions

// Define a function f
func f= 30 * x * y;

// Get the clock in second
real cpu=clock();

// Define the PDE
solve Poisson(u, v, solver=LU)
= int2d(Th)(
// The bilinear part
dx(u)*dx(v)
+ dy(u)*dy(v)
)
- int2d(Th)(
// The right hand side
f*v
)
+ on(C, u=0);
// The Dirichlet boundary condition

// Plot the result
plot(u);

// Display the total computational time
cout << "CPU time = " << (clock()-cpu) << endl;

ofstream ff("demo01-freefem.txt");
for (int i = 0; i < Th.nt; i++)
{
  for (int j = 0; j < 3; j++)
    ff << Th[i][j].x << " "<< Th[i][j].y << " " << u[][Vh(i,j)] << endl;
    
  ff << Th[i][0].x << " " << Th[i][0].y << " " << u[][Vh(i,0)] << "\n";
}